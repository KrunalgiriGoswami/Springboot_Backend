<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.rbac.mapper.OrderMapper">
    <resultMap id="OrderResultMap" type="com.example.rbac.entity.Order">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="totalPrice" column="total_price"/>
        <result property="createdAt" column="created_at"/>
        <result property="status" column="status"/>
        <collection property="items" ofType="com.example.rbac.entity.OrderItem">
            <id property="id" column="item_id"/>
            <result property="productId" column="product_id"/>
            <result property="quantity" column="quantity"/>
            <result property="price" column="price"/>
        </collection>
    </resultMap>

    <resultMap id="OrderStatusHistoryResultMap" type="com.example.rbac.entity.OrderStatusHistory">
        <id property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="status" column="status"/>
        <result property="timestamp" column="timestamp"/>
    </resultMap>

    <insert id="insertOrder" parameterType="com.example.rbac.entity.Order" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO orders (user_id, total_price, created_at, status)
        VALUES (#{userId}, #{totalPrice}, #{createdAt}, #{status})
    </insert>

    <insert id="insertOrderItem" parameterType="com.example.rbac.entity.OrderItem" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO order_items (order_id, product_id, quantity, price)
        VALUES (#{order.id}, #{productId}, #{quantity}, #{price})
    </insert>

    <select id="findOrdersByUserId" parameterType="long" resultMap="OrderResultMap">
        SELECT o.id, o.user_id, o.total_price, o.created_at, o.status,
        oi.id AS item_id, oi.product_id, oi.quantity, oi.price
        FROM orders o
        LEFT JOIN order_items oi ON o.id = oi.order_id
        WHERE o.user_id = #{userId}
        ORDER BY o.created_at DESC
    </select>

    <select id="findAllOrders" resultMap="OrderResultMap">
        SELECT o.id, o.user_id, o.total_price, o.created_at, o.status,
        oi.id AS item_id, oi.product_id, oi.quantity, oi.price
        FROM orders o
        LEFT JOIN order_items oi ON o.id = oi.order_id
        ORDER BY o.created_at DESC
    </select>

    <update id="updateOrderStatus" parameterType="map">
        UPDATE orders
        SET status = #{status}
        WHERE id = #{orderId}
    </update>

    <select id="findOrderById" parameterType="long" resultMap="OrderResultMap">
        SELECT o.id, o.user_id, o.total_price, o.created_at, o.status,
        oi.id AS item_id, oi.product_id, oi.quantity, oi.price
        FROM orders o
        LEFT JOIN order_items oi ON o.id = oi.order_id
        WHERE o.id = #{orderId}
    </select>

    <insert id="insertOrderStatusHistory" parameterType="com.example.rbac.entity.OrderStatusHistory">
        INSERT INTO order_status_history (order_id, status, timestamp)
        VALUES (#{orderId}, #{status}, #{timestamp})
    </insert>

    <select id="findStatusHistoryByOrderId" parameterType="long" resultMap="OrderStatusHistoryResultMap">
        SELECT id, order_id, status, timestamp
        FROM order_status_history
        WHERE order_id = #{orderId}
        ORDER BY timestamp DESC
    </select>
</mapper>